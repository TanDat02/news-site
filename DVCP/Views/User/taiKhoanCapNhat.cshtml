@model DVCP.Models.UserDetail

@{
    ViewBag.Title = "taiKhoanCapNhat";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div style="margin-top:10px; text-align: center">
            <h4><span style="color:blue"> Chỉnh Sửa Thông Tin</span></h4>
            <p style="margin-top:3px; border-bottom: 1px dotted blue;"></p>
        </div>
        <div class="alert alert-success">
            @ViewBag.Message
        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserID)

        <div class="form-group">
            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfBirth, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control", required = true } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserPhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserPhone, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ImagePath, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Avatar, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Avatar, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.UserGender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{if (Model.UserGender)
                    {
                        <label class="col-md-2">@Html.RadioButtonFor(model => model.UserGender, true) Nam</label>
                        <label>@Html.RadioButtonFor(model => model.UserGender, false) Nữ</label>
                    }
                    else
                    {
                        <label class="col-md-2">@Html.RadioButtonFor(model => model.UserGender, false) Nam</label>
                        <label>@Html.RadioButtonFor(model => model.UserGender, true) Nữ</label>
                    }
                }
            </div>
        </div>

        @if (User.IsInRole("admin"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.GroupId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.GroupId, new List<SelectListItem>
                    {
                        new SelectListItem { Value = "0", Text = "Chọn", Disabled = true, Selected = true  },
                        new SelectListItem { Value = "1", Text = "Quản trị", },
                        new SelectListItem { Value = "2", Text = "Nhập liệu", },
                        new SelectListItem { Value = "3", Text = "Tra cứu", },
                    }, htmlAttributes: new { @class = "form-control", required = true })
                </div>
            </div>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-info btn-md col-md-2" />
            </div>
        </div>
    </div>
                    }

