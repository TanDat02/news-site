@model DVCP.Models.User1
@{
    ViewBag.Title = "createUser";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{
    if (ViewBag.Message != null)
    {
        <div class="alert alert-success">
            <strong>Success!</strong>@ViewBag.Message
        </div>
    }
}
else
{
    <div class="w3-container">
        <div class="w3-modal-content w3-card-4 w3-animate-zoom" style="max-width">
            <div class="w3-section" style="padding: 1.01em 16px;">
                <h3 class="text-center text-info">Tạo tài khoản</h3>
                @using (Html.BeginForm("createUser", "User", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="w3-half w3-margin-bottom">
                            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-10" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="w3-half w3-margin-bottom">
                            @Html.LabelFor(model => model.EmailID, htmlAttributes: new { @class = "control-label col-md-10" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                                @Html.ValidationMessage("EmailExist", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="w3-half w3-margin-bottom">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-10" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="w3-half w3-margin-bottom">
                            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-10" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="w3-half w3-margin-bottom">
                            <label class="control-label col-md-10">Nhóm người dùng</label>
                            <div class="col-md-10">
                                @*@Html.DropDownList("GroupId", (List<SelectListItem>)ViewData[""] , new { @class = "form-control" })*@
                                @*@Html.DropDownListFor(m => m.GroupId, ViewBag.GroupId as SelectList, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.GroupId, "", new { @class = "text-danger" })*@
                                @Html.DropDownListFor(model => model.GroupId, new List<SelectListItem>
                                {
                                   new SelectListItem{ Value = "0", Text="[Chọn]", },
                                   new SelectListItem{ Value = "1", Text="Quản trị",  },
                                   new SelectListItem{ Value = "2", Text="Nhập liệu",  },
                                   new SelectListItem{ Value = "3", Text="Tra cứu",  },
                                }, htmlAttributes: new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="w3-half w3-margin-bottom">
                            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-10" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="w3-half w3-margin-bottom">
                            @Html.LabelFor(model => model.UserPhone, htmlAttributes: new { @class = "control-label col-md-10" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.UserPhone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserPhone, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="w3-half w3-margin-bottom">
                            @Html.LabelFor(model => model.UserGender, htmlAttributes: new { @class = "control-label col-md-10" })
                            <div class="col-md-10">
                                <label class="col-md-2">@Html.RadioButtonFor(model => model.UserGender, true) Nam</label>
                                <label>@Html.RadioButtonFor(model => model.UserGender, false) Nữ</label>
                            </div>
                        </div>

                        @*<div class="form-group">
                            @Html.LabelFor(model => model.Avatar, htmlAttributes: new { @class = "control-label col-md-10" })
                            <div class="col-md-10">
                                <input type="file" name="Avatar" id="Avatar" style="width: 100%;" />
                            </div>
                        </div>*@

                        <div>
                            <input type="submit" value="Tạo tài khoản" style="margin-left: 225px;" class="btn btn-info btn-md col-md-6" />
                        </div>
                    </div>
                    if (ViewBag.Message != null)
                    {
                        <div class="alert alert-danger">
                            <strong>Error!</strong>@ViewBag.Message
                        </div>
                    }
                }
            </div>
        </div>
    </div>
}

@section Scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}
